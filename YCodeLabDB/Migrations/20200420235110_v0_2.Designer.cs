// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using YCodeLab.DB;

namespace YCodeLab.DB.Migrations
{
    [DbContext(typeof(YCodeLabDbContext))]
    [Migration("20200420235110_v0_2")]
    partial class v0_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("YCodeLab.DB.Messaging.Comment", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("comment_id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("category")
                        .HasColumnName("category")
                        .HasColumnType("text");

                    b.Property<string>("content")
                        .HasColumnName("content")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("category");

                    b.ToTable("comment","messaging");
                });

            modelBuilder.Entity("YCodeLab.DB.Messaging.Message", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("message_id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("content")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnName("created_time")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SenderEmail")
                        .IsRequired()
                        .HasColumnName("sender_email")
                        .HasColumnType("text");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnName("sender_name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("message","messaging");
                });

            modelBuilder.Entity("YCodeLab.DB.Resume.Company", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("company_id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("company","resume");
                });

            modelBuilder.Entity("YCodeLab.DB.Resume.Experience", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("experience_id ")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnName("end_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("ProfileId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnName("start_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("text");

                    b.Property<long?>("company_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.HasIndex("company_id");

                    b.ToTable("experience","resume");
                });

            modelBuilder.Entity("YCodeLab.DB.Resume.Profile", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("profile_id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CurrentTitle")
                        .HasColumnName("current_title")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnName("first_name")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnName("last_name")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnName("middle_name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("profile","resume");
                });

            modelBuilder.Entity("YCodeLab.DB.Resume.Experience", b =>
                {
                    b.HasOne("YCodeLab.DB.Resume.Profile", null)
                        .WithMany("Experiences")
                        .HasForeignKey("ProfileId");

                    b.HasOne("YCodeLab.DB.Resume.Company", "Company")
                        .WithMany()
                        .HasForeignKey("company_id");
                });
#pragma warning restore 612, 618
        }
    }
}
